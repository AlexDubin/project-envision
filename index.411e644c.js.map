{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,Q,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,K,E,Q,E,E,S,E,O,C,I,E,A,M,uB,E,I,O,E,K,mB,C,C,E,S,S,C,C,C,E,C,C,E,C,C,E,E,kB,G,E,S,E,S,I,E,C,EKAA,EAAiB,KAAK,MAAM,uiB,I,E,E,SDI5B,MAAM,EAAU,CACd,QAAS,CACP,cACE,6NACF,OAAQ,kBACV,CACF,EAEA,eAAe,EAAwB,EAAO,CAAC,EAC7C,GAAI,CACF,IAAM,EAAW,MAAM,AAAA,CAAA,EAAA,EAAA,OAAA,EAAM,IAC3B,wEAAuD,GAAM,CAC7D,GAGF,OADA,QAAQ,IAAI,EAAS,MACd,EAAS,IAClB,CAAE,MAAO,EAAO,CACd,QAAQ,IAAI,EACd,CACF,CAEA,MAAM,EAAY,SAAS,cAAc,oBAEzC,GAAI,EAAW,CACb,IAAM,EAAe,CAAC,EACtB,AAAA,A,C,S,C,E,O,G,E,W,E,Q,C,C,EAAA,GAAO,OAAO,QAAQ,AAAA,IACpB,CAAY,CAAC,EAAM,GAAG,CAAG,EAAM,IACjC,GAEA,IACG,KAAK,AAAA,IACJ,QAAQ,IAAI,GACZ,AAIJ,SAAsB,CAAA,QAAE,CAAA,CAAS,EAC/B,QAAQ,IAAI,CAAE,QAAA,CAAQ,GACtB,IAAM,EAAgB,EAAE,CACxB,KAAO,EAAc,OAAS,GAAG,CAC/B,IAAM,EAAc,KAAK,MAAM,KAAK,SAAW,EAAQ,QAClD,EAAc,SAAS,IAC1B,EAAc,KAAK,EAEvB,CACA,IAAM,EAAe,EAAc,IAAI,AAAA,GAAS,CAAO,CAAC,EAAM,CAC9D,CAAA,EAAU,UAAY,EACnB,IAAI,CAAC,CAAA,YAAE,CAAA,CAAW,MAAE,CAAA,CAAK,aAAE,CAAA,CAAY,UAAE,CAAA,CAAS,aAAE,CAAA,CAAc,IACjE,QAAQ,IAAI,EAAG,EAAc,GAC7B,IAAI,EAAa,GAUjB,OATI,EAAU,OAAS,IAEnB,EADE,AAAqB,IAArB,EAAU,QAAgB,EAAU,KAAK,MAAM,QAAU,GAC9C,CAAY,CAAC,CAAS,CAAC,EAAE,CAAC,CAE1B,CAAC,EAAE,CAAY,CAAC,CAAS,CAAC,EAAE,CAAC,CAAC,EAAE,EAC3C,CAAY,CAAC,CAAS,CAAC,EAAE,CAAC,CAC3B,CAAC,EAGC,CAAC;iFACiE,EAAE,EAAY,OAAO,EAAE,EAAM;;;yCAGrE,EAAE,EAAM;;;iDAGA,EAAE,EAAW;;gDAEd,EAAE,EAAa,MAAM,EAAG,GAAG;;;;;;;;;;;;;;0CAcjC,EAAE,EAAa;;;;aAI5C,CAAC,AACR,GACC,KAAK,IACR,AAEF,WACE,QAAQ,IAAI,GACZ,IAAM,EAAU,SAAS,iBAAiB,WAC1C,EAAQ,QAAQ,AAAA,IACd,AAGJ,CAAA,SAAoB,CAAM,MAUkB,EAT1C,IAAM,EAAe,EAAO,cAAc,kBACpC,EAAc,EAAO,cAAc,iBACzC,QAAQ,IAAI,EAAa,GAErB,IAKsC,EAJL,EAAY,UAKjD,QAAQ,IAAI,GAEZ,AAPuB,EAOV,MAAM,MAAQ,CAAC,EADD,EAAQ,GAAM,IACO,CAAC,CAAC,CAClD,QAAQ,IAAI,GANd,CAAA,EAXe,EACb,EACF,GAPA,EA1DiB,EACf,GACC,MAAM,AAAA,GAAO,QAAQ,IAAI,GAgF9B,C,E,S,E,S,E,S,E","sources":["<anon>","src/index.js","src/js/home_page/index.js","src/js/home_page/section_upcoming.js","src/js/home_page/weekly_trends.js","src/js/genres.json"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire34ff\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire34ff\"] = parcelRequire;\n}\nparcelRequire(\"bUb57\");\nparcelRequire(\"dvHux\");\n\n\nvar $1a18d98a372d8e28$exports = {};\n$1a18d98a372d8e28$exports = JSON.parse('{\"genres\":[{\"id\":28,\"name\":\"Action\"},{\"id\":12,\"name\":\"Adventure\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":18,\"name\":\"Drama\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":14,\"name\":\"Fantasy\"},{\"id\":36,\"name\":\"History\"},{\"id\":27,\"name\":\"Horror\"},{\"id\":10402,\"name\":\"Music\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10749,\"name\":\"Romance\"},{\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},{\"id\":53,\"name\":\"Thriller\"},{\"id\":10752,\"name\":\"War\"},{\"id\":37,\"name\":\"Western\"}]}');\n\n\n\nvar $2shzp = parcelRequire(\"2shzp\");\nconst $0861ddada659e38e$var$BASE_URL = \"https://api.themoviedb.org/3\";\nconst $0861ddada659e38e$var$options = {\n    headers: {\n        Authorization: \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmFhZDQ4MjlkYjI1ZWQ1Mjc0NmY0NmY4YzQ1NzRlYSIsInN1YiI6IjY0NzIzZDc3OWFlNjEzMDBjNGM3NmY1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v_Pd0M6hpO0qy1_8-nNBGtFxbeHjE8i8mgfszlHvjZc\",\n        accept: \"application/json\"\n    }\n};\nasync function $0861ddada659e38e$var$getTrendingMoviesByWeek(page = 1) {\n    try {\n        const response = await (0, $2shzp.default).get(`${$0861ddada659e38e$var$BASE_URL}/trending/movie/week?language=en-US&page=${page}`, $0861ddada659e38e$var$options);\n        console.log(response.data);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\nconst $0861ddada659e38e$var$movieList = document.querySelector(\".list-movie-card\");\nif ($0861ddada659e38e$var$movieList) {\n    const genresObject = {};\n    (0, (/*@__PURE__*/$parcel$interopDefault($1a18d98a372d8e28$exports))).genres.forEach((genre)=>{\n        genresObject[genre.id] = genre.name;\n    });\n    $0861ddada659e38e$var$getTrendingMoviesByWeek().then((data)=>{\n        console.log(data);\n        markupMovies(data);\n    }).catch((err)=>console.log(err));\n    function markupMovies({ results: results  }) {\n        console.log({\n            results: results\n        });\n        const randomIndexes = [];\n        while(randomIndexes.length < 3){\n            const randomIndex = Math.floor(Math.random() * results.length);\n            if (!randomIndexes.includes(randomIndex)) randomIndexes.push(randomIndex);\n        }\n        const moviesToShow = randomIndexes.map((index)=>results[index]);\n        $0861ddada659e38e$var$movieList.innerHTML = moviesToShow.map(({ poster_path: poster_path , title: title , vote_average: vote_average , genre_ids: genre_ids , release_date: release_date  })=>{\n            console.log(5, vote_average, release_date);\n            let genreNames = \"\";\n            if (genre_ids.length > 0) {\n                if (genre_ids.length === 1 || genre_ids.join(\", \").length <= 20) genreNames = genresObject[genre_ids[0]];\n                else genreNames = `${genresObject[genre_ids[0]]}, ${genresObject[genre_ids[1]]}`;\n            }\n            return `<li class='item-movie-card'>\n          <img class='poster-movie-card' src='https://image.tmdb.org/t/p/original${poster_path}' alt='${title}'>\n          <div class='overlay-movie-card'></div>\n          <div class='info-movie-card'>\n            <h4 class='title-movie-card'>${title}</h4>\n            <div class='wrapper-movie-card'>\n              <div class='genre-year-movie-card'>\n                <p class='genre-movie-card span'>${genreNames}</p>\n                <span class='divider-movie-card'>&#124</span>\n                <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n              </div>\n              <div class=\"form-item\">\n                <div class=\"rating\">\n                  <div class=\"rating-body\">\n                    <div class=\"rating-active\"></div>\n                    <div class=\"rating-items\">\n                      <input type=\"radio\" class=\"rating-item\" value=\"1\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"2\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"3\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"4\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"5\" name=\"rating\" />\n                    </div>\n                  </div>\n                <div class=\"rating-value\">${vote_average}</div>\n              </div>\n            </div>\n          </div>\n        </li>`;\n        }).join(\"\");\n        initRatings();\n    }\n    function initRatings() {\n        console.log(4);\n        const ratings = document.querySelectorAll(\".rating\");\n        ratings.forEach((rating)=>{\n            initRating(rating);\n        });\n    }\n    function initRating(rating) {\n        const ratingActive = rating.querySelector(\".rating-active\");\n        const ratingValue = rating.querySelector(\".rating-value\");\n        console.log(ratingValue, ratingActive);\n        if (ratingValue) setRatingActiveWidth(ratingActive, ratingValue.innerHTML);\n    }\n    function setRatingActiveWidth(ratingActive, index) {\n        console.log(4);\n        const ratingActiveWidth = index / 10 * 100;\n        ratingActive.style.width = `${ratingActiveWidth}%`;\n        console.log(4);\n    }\n}\n\n\n\n\nparcelRequire(\"1Hrz4\");\nparcelRequire(\"epHO8\");\nparcelRequire(\"gjiCh\");\nparcelRequire(\"5kw5v\");\n\n\n//# sourceMappingURL=index.411e644c.js.map\n","import './js/header';\n\nimport './js/home_page';\n\nimport './js/modals';\n\nimport './js/footer';\n\nimport './js/loader';\nimport './js/go_to_top_btn';\n","import './section_hero';\nimport './section_upcoming';\nimport './weekly_trends';\n","","import genres from '../genres.json';\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMmFhZDQ4MjlkYjI1ZWQ1Mjc0NmY0NmY4YzQ1NzRlYSIsInN1YiI6IjY0NzIzZDc3OWFlNjEzMDBjNGM3NmY1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.v_Pd0M6hpO0qy1_8-nNBGtFxbeHjE8i8mgfszlHvjZc',\n    accept: 'application/json',\n  },\n};\n\nasync function getTrendingMoviesByWeek(page = 1) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?language=en-US&page=${page}`,\n      options\n    );\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst movieList = document.querySelector('.list-movie-card');\n\nif (movieList) {\n  const genresObject = {};\n  genres.genres.forEach(genre => {\n    genresObject[genre.id] = genre.name;\n  });\n\n  getTrendingMoviesByWeek()\n    .then(data => {\n      console.log(data);\n      markupMovies(data);\n    })\n    .catch(err => console.log(err));\n\n  function markupMovies({ results }) {\n    console.log({ results });\n    const randomIndexes = [];\n    while (randomIndexes.length < 3) {\n      const randomIndex = Math.floor(Math.random() * results.length);\n      if (!randomIndexes.includes(randomIndex)) {\n        randomIndexes.push(randomIndex);\n      }\n    }\n    const moviesToShow = randomIndexes.map(index => results[index]);\n    movieList.innerHTML = moviesToShow\n      .map(({ poster_path, title, vote_average, genre_ids, release_date }) => {\n        console.log(5, vote_average, release_date);\n        let genreNames = '';\n        if (genre_ids.length > 0) {\n          if (genre_ids.length === 1 || genre_ids.join(', ').length <= 20) {\n            genreNames = genresObject[genre_ids[0]];\n          } else {\n            genreNames = `${genresObject[genre_ids[0]]}, ${\n              genresObject[genre_ids[1]]\n            }`;\n          }\n        }\n        return `<li class='item-movie-card'>\n          <img class='poster-movie-card' src='https://image.tmdb.org/t/p/original${poster_path}' alt='${title}'>\n          <div class='overlay-movie-card'></div>\n          <div class='info-movie-card'>\n            <h4 class='title-movie-card'>${title}</h4>\n            <div class='wrapper-movie-card'>\n              <div class='genre-year-movie-card'>\n                <p class='genre-movie-card span'>${genreNames}</p>\n                <span class='divider-movie-card'>&#124</span>\n                <p class='year-movie-card span'>${release_date.slice(0, 4)}</p>\n              </div>\n              <div class=\"form-item\">\n                <div class=\"rating\">\n                  <div class=\"rating-body\">\n                    <div class=\"rating-active\"></div>\n                    <div class=\"rating-items\">\n                      <input type=\"radio\" class=\"rating-item\" value=\"1\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"2\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"3\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"4\" name=\"rating\" />\n                      <input type=\"radio\" class=\"rating-item\" value=\"5\" name=\"rating\" />\n                    </div>\n                  </div>\n                <div class=\"rating-value\">${vote_average}</div>\n              </div>\n            </div>\n          </div>\n        </li>`;\n      })\n      .join('');\n    initRatings();\n  }\n  function initRatings() {\n    console.log(4);\n    const ratings = document.querySelectorAll('.rating');\n    ratings.forEach(rating => {\n      initRating(rating);\n    });\n  }\n  function initRating(rating) {\n    const ratingActive = rating.querySelector('.rating-active');\n    const ratingValue = rating.querySelector('.rating-value');\n    console.log(ratingValue, ratingActive);\n\n    if (ratingValue) {\n      setRatingActiveWidth(ratingActive, ratingValue.innerHTML);\n    }\n  }\n\n  function setRatingActiveWidth(ratingActive, index) {\n    console.log(4);\n    const ratingActiveWidth = (index / 10) * 100;\n    ratingActive.style.width = `${ratingActiveWidth}%`;\n    console.log(4);\n  }\n}\n","{\n  \"genres\": [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    }\n  ]\n}"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$1a18d98a372d8e28$exports","JSON","parse","$2shzp","$0861ddada659e38e$var$options","headers","Authorization","accept","$0861ddada659e38e$var$getTrendingMoviesByWeek","page","response","default","get","console","log","data","error","$0861ddada659e38e$var$movieList","document","querySelector","genresObject","$parcel$interopDefault","a","__esModule","genres","forEach","genre","name","then","markupMovies","results","randomIndexes","length","randomIndex","Math","floor","random","includes","push","moviesToShow","map","index","innerHTML","poster_path","title","vote_average","genre_ids","release_date","genreNames","join","slice","initRatings","ratings","querySelectorAll","rating","initRating","ratingActive","ratingValue","style","width","catch"],"version":3,"file":"index.411e644c.js.map"}